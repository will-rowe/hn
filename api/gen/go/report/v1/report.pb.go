// Package: report
// Version: v1
// Description: Report Service is used to report violations.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: report/v1/report.proto

package report

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MediaType int32

const (
	MediaType_MEDIA_TYPE_UNSPECIFIED MediaType = 0
	MediaType_MEDIA_TYPE_TEXT        MediaType = 1
	MediaType_MEDIA_TYPE_IMAGE       MediaType = 2
	MediaType_MEDIA_TYPE_AUDIO       MediaType = 3
	MediaType_MEDIA_TYPE_VIDEO       MediaType = 4
	MediaType_MEDIA_TYPE_ANIMATION   MediaType = 5
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MEDIA_TYPE_UNSPECIFIED",
		1: "MEDIA_TYPE_TEXT",
		2: "MEDIA_TYPE_IMAGE",
		3: "MEDIA_TYPE_AUDIO",
		4: "MEDIA_TYPE_VIDEO",
		5: "MEDIA_TYPE_ANIMATION",
	}
	MediaType_value = map[string]int32{
		"MEDIA_TYPE_UNSPECIFIED": 0,
		"MEDIA_TYPE_TEXT":        1,
		"MEDIA_TYPE_IMAGE":       2,
		"MEDIA_TYPE_AUDIO":       3,
		"MEDIA_TYPE_VIDEO":       4,
		"MEDIA_TYPE_ANIMATION":   5,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_report_v1_report_proto_enumTypes[0].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_report_v1_report_proto_enumTypes[0]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{0}
}

type ViolationType int32

const (
	ViolationType_VIOLATION_TYPE_UNSPECIFIED ViolationType = 0
	ViolationType_VIOLATION_TYPE_PII         ViolationType = 1
	ViolationType_VIOLATION_TYPE_COPYRIGHT   ViolationType = 2
	ViolationType_VIOLATION_TYPE_OTHER       ViolationType = 3
)

// Enum value maps for ViolationType.
var (
	ViolationType_name = map[int32]string{
		0: "VIOLATION_TYPE_UNSPECIFIED",
		1: "VIOLATION_TYPE_PII",
		2: "VIOLATION_TYPE_COPYRIGHT",
		3: "VIOLATION_TYPE_OTHER",
	}
	ViolationType_value = map[string]int32{
		"VIOLATION_TYPE_UNSPECIFIED": 0,
		"VIOLATION_TYPE_PII":         1,
		"VIOLATION_TYPE_COPYRIGHT":   2,
		"VIOLATION_TYPE_OTHER":       3,
	}
)

func (x ViolationType) Enum() *ViolationType {
	p := new(ViolationType)
	*p = x
	return p
}

func (x ViolationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViolationType) Descriptor() protoreflect.EnumDescriptor {
	return file_report_v1_report_proto_enumTypes[1].Descriptor()
}

func (ViolationType) Type() protoreflect.EnumType {
	return &file_report_v1_report_proto_enumTypes[1]
}

func (x ViolationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViolationType.Descriptor instead.
func (ViolationType) EnumDescriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{1}
}

type SubmitReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId     string        `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	DataId        string        `protobuf:"bytes,2,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	MediaType     MediaType     `protobuf:"varint,3,opt,name=media_type,json=mediaType,proto3,enum=report.v1.MediaType" json:"media_type,omitempty"`
	ViolationType ViolationType `protobuf:"varint,4,opt,name=violation_type,json=violationType,proto3,enum=report.v1.ViolationType" json:"violation_type,omitempty"`
	Description   string        `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SubmitReportRequest) Reset() {
	*x = SubmitReportRequest{}
	mi := &file_report_v1_report_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitReportRequest) ProtoMessage() {}

func (x *SubmitReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitReportRequest.ProtoReflect.Descriptor instead.
func (*SubmitReportRequest) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitReportRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *SubmitReportRequest) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *SubmitReportRequest) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *SubmitReportRequest) GetViolationType() ViolationType {
	if x != nil {
		return x.ViolationType
	}
	return ViolationType_VIOLATION_TYPE_UNSPECIFIED
}

func (x *SubmitReportRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SubmitReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId string `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SubmitReportResponse) Reset() {
	*x = SubmitReportResponse{}
	mi := &file_report_v1_report_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitReportResponse) ProtoMessage() {}

func (x *SubmitReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitReportResponse.ProtoReflect.Descriptor instead.
func (*SubmitReportResponse) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitReportResponse) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *SubmitReportResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_report_v1_report_proto protoreflect.FileDescriptor

var file_report_v1_report_proto_rawDesc = []byte{
	0x0a, 0x16, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x14, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x98, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d,
	0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x44, 0x49, 0x41,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4e, 0x49, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x05, 0x2a, 0x7f, 0x0a, 0x0d, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x56, 0x49, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x49, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x49, 0x49, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x49,
	0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x50,
	0x59, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x49, 0x4f, 0x4c,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x03, 0x32, 0x78, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22,
	0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x42, 0x6a, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x07, 0x2f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_report_v1_report_proto_rawDescOnce sync.Once
	file_report_v1_report_proto_rawDescData = file_report_v1_report_proto_rawDesc
)

func file_report_v1_report_proto_rawDescGZIP() []byte {
	file_report_v1_report_proto_rawDescOnce.Do(func() {
		file_report_v1_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_report_v1_report_proto_rawDescData)
	})
	return file_report_v1_report_proto_rawDescData
}

var file_report_v1_report_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_report_v1_report_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_report_v1_report_proto_goTypes = []any{
	(MediaType)(0),               // 0: report.v1.MediaType
	(ViolationType)(0),           // 1: report.v1.ViolationType
	(*SubmitReportRequest)(nil),  // 2: report.v1.SubmitReportRequest
	(*SubmitReportResponse)(nil), // 3: report.v1.SubmitReportResponse
}
var file_report_v1_report_proto_depIdxs = []int32{
	0, // 0: report.v1.SubmitReportRequest.media_type:type_name -> report.v1.MediaType
	1, // 1: report.v1.SubmitReportRequest.violation_type:type_name -> report.v1.ViolationType
	2, // 2: report.v1.ReportService.SubmitReport:input_type -> report.v1.SubmitReportRequest
	3, // 3: report.v1.ReportService.SubmitReport:output_type -> report.v1.SubmitReportResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_report_v1_report_proto_init() }
func file_report_v1_report_proto_init() {
	if File_report_v1_report_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_report_v1_report_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_report_v1_report_proto_goTypes,
		DependencyIndexes: file_report_v1_report_proto_depIdxs,
		EnumInfos:         file_report_v1_report_proto_enumTypes,
		MessageInfos:      file_report_v1_report_proto_msgTypes,
	}.Build()
	File_report_v1_report_proto = out.File
	file_report_v1_report_proto_rawDesc = nil
	file_report_v1_report_proto_goTypes = nil
	file_report_v1_report_proto_depIdxs = nil
}
